WITH RECURSIVE PROJECT_HIERARCHY AS
	(SELECT P.ID AS BASE_PROJECT_ID,
			P.ID,
			P.NAME,
			P.PARENT_PROJECT_ID,
			P.CONTROLLING_PERMISSIONS_PROJECT_ID,
			P2.NAME AS CONTROL_PROJECT_NAME,
			1 AS LVL
		FROM PROJECTS P
		LEFT JOIN PROJECTS P2 ON P.CONTROLLING_PERMISSIONS_PROJECT_ID = P2.ID
		UNION ALL SELECT PH.BASE_PROJECT_ID,
			P2.ID,
			P2.NAME,
			P2.PARENT_PROJECT_ID,
			P2.CONTROLLING_PERMISSIONS_PROJECT_ID,
			P3.NAME AS CONTROL_PROJECT_NAME,
			PH.LVL + 1 AS LVL
		FROM PROJECT_HIERARCHY PH
		JOIN PROJECTS P2 ON PH.PARENT_PROJECT_ID = P2.ID
		LEFT JOIN PROJECTS P3 ON P2.CONTROLLING_PERMISSIONS_PROJECT_ID = P3.ID
		WHERE PH.LVL < 6 ),
	PROJECT AS
	(SELECT PH.BASE_PROJECT_ID,
			PH.ID,
			PH.NAME,
			PH.CONTROLLING_PERMISSIONS_PROJECT_ID,
			CONCAT_WS('\',

				PH.CONTROL_PROJECT_NAME,
				PH6.NAME,
				PH5.NAME,
				PH4.NAME,
				PH3.NAME,
				PH2.NAME,
				PH.NAME) AS "Path"
		FROM PROJECT_HIERARCHY PH
		LEFT JOIN PROJECT_HIERARCHY PH2 ON PH.PARENT_PROJECT_ID = PH2.ID
		AND PH2.LVL = 2
		LEFT JOIN PROJECT_HIERARCHY PH3 ON PH2.PARENT_PROJECT_ID = PH3.ID
		AND PH3.LVL = 3
		LEFT JOIN PROJECT_HIERARCHY PH4 ON PH3.PARENT_PROJECT_ID = PH4.ID
		AND PH4.LVL = 4
		LEFT JOIN PROJECT_HIERARCHY PH5 ON PH4.PARENT_PROJECT_ID = PH5.ID
		AND PH5.LVL = 5
		LEFT JOIN PROJECT_HIERARCHY PH6 ON PH5.PARENT_PROJECT_ID = PH6.ID
		AND PH6.LVL = 6
		WHERE PH.LVL = 1 ),
	FINAL_PROJECT AS
	(SELECT 
	 		ID,
			NAME,
			CONTROLLING_PERMISSIONS_PROJECT_ID,
			"Path"
		FROM PROJECT
		GROUP BY ID,
			NAME,
			CONTROLLING_PERMISSIONS_PROJECT_ID,
			"Path")
		SELECT * FROM FINAL_PROJECT